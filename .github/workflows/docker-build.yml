name: Docker Build, Push, and Deploy

#auto trigger when push to dev branch nd and push to docker hub
on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: DOCKER
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}

#    - name: SSH Command to Deploy to Server using SSH
  deploy:
    runs-on: ubuntu-latest
    environment: DOCKER
    needs: build-and-push
    steps:
      # Step 5: Set up SSH Key for Deployment
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Step 6: Deploy to Server
      - name: Deploy to Server
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
           ehco "Remote in to server successfully"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true
            docker rmi -f ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}
            docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 4012:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}
            docker logout 
          EOF
  


  # deploy:
  #   runs-on: ubuntu-latest
  #   environment: DOCKER
  #   needs: build-and-push
  #   steps:
  #     - name: Install SSHPass
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y sshpass

  #     - name: SSH Command to Deploy
  #       run: |
  #         sshpass -p '${{ secrets.SSH_PASSWORD }}' ssh -o StrictHostKeyChecking=no -p 22 '${{ secrets.SSH_USER }}'@'${{ secrets.SSH_HOST }}' << EOF
  #           sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
  #           sudo docker stop ${{ secrets.CONTAINER_NAME }} || true
  #           sudo docker rm ${{ secrets.CONTAINER_NAME }} || true
  #           sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true
  #           sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}
  #           sudo docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 4012:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}
  #           sudo docker logout
  #         EOF
